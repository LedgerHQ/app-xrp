name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  scan-build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest

    steps:
      - uses: actions/checkout@v3

      - name: Build with Clang Static Analyzer
        run: |
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_unit_test:
    name: Unit tests
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-legacy:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-get install -y libssl-dev libcmocka-dev

      - name: Build unit tests
        run: |
          cmake -Btests/build -Htests/ && make -C tests/build/

      - name: Run unit tests
        run: |
          make -C tests/build test

  rule_enforcer:
    name: Run Ledger rule enforcer
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_guidelines_enforcer.yml@v1

  build_application:
    name: Build application
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: compiled_app_binaries
      skip_stax: true
      
  ragger_tests:
    name: Functional tests with Ragger
    needs: build_application
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries
      test_dir: tests
      skip_stax: true

