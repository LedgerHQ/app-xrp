name: Compilation & tests

on: [push, pull_request]

jobs:
  scan-build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - uses: actions/checkout@v3

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: scan-build
          path: scan-build

  job_build_debug:
    name: Build debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Build Nano S app
        run: |
          make DEBUG=1

      - name: Upload app binary
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-nanos
          path: bin

      - name: Cleanup the repository
        run: |
          git clean -dxf

      - name: Build Nano X app
        run: |
          make DEBUG=1 BOLOS_SDK=$NANOX_SDK

      - name: Upload app binary
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-nanox
          path: bin

  job_unit_test:
    name: Unit tests
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-get update -q
          apt-get install -qy libssl-dev

      - name: Build unit tests
        run: |
          cmake -Btests/build -Htests/ && make -C tests/build/

      - name: Run unit tests
        run: |
          make -C tests/build test

  job_test:
    name: Functional tests
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/ledgerhq/speculos:latest
      options: --entrypoint /bin/bash

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install -r tests/requirements.txt
          apt-get update -q
          apt-get install -qy netcat

      - name: Download Nano S app binary
        uses: actions/download-artifact@v3
        with:
          name: app-debug-nanos
          path: bin-nanos

      - name: Download Nano X app binary
        uses: actions/download-artifact@v3
        with:
          name: app-debug-nanox
          path: bin-nanox

      - name: Run speculos in the background
        run: |
          /speculos/speculos.py --display headless --automation file:tests/automation.json bin-nanos/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests against the Nano S app
        env:
          LEDGER_PROXY_ADDRESS: 127.0.0.1
          LEDGER_PROXY_PORT: 9999
        run: |
          pytest tests/

      - name: Upload speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-nanos-log
          path: speculos.log

      - name: Kill speculos
        run: |
          kill -9 $(cat /tmp/speculos.pid)

      - name: Run speculos in the background
        run: |
          /speculos/speculos.py --model nanox --display headless --automation file:tests/automation.json bin-nanox/app.elf 2>speculos.log &
          echo $! >/tmp/speculos.pid
          timeout 10 sh -c 'until nc -z 127.0.0.1 9999; do sleep 1; done'

      - name: Run tests against the Nano X app
        env:
          LEDGER_PROXY_ADDRESS: 127.0.0.1
          LEDGER_PROXY_PORT: 9999
        run: |
          pytest tests/

      - name: Upload speculos log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: speculos-nanox-log
          path: speculos.log
